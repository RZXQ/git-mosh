# Initialize a new Git repository in the current directory
# This creates a hidden .git folder to track version control
git init

# List all files and directories (including hidden ones)
# The -a flag shows hidden files like .git that start with a dot
ls -a

# Create two text files with content "hello"
# The > operator creates a new file or overwrites existing content
echo hello > file1.txt
echo hello > file2.txt

# Check the current status of the working directory and staging area
# Shows untracked files, modified files, and staged changes
git status

# STAGING WORKFLOW - Adding files to the staging area (index)

# Method 1: Add specific files individually
# Stages file1.txt and file2.txt for the next commit
git add file1.txt file2.txt

# Method 2: Add files using wildcards
# Stages all .txt files in the current directory
git add *.txt

# Method 3: Add all changes (new, modified, deleted files)
# The dot (.) represents the current directory and all subdirectories
git add .

# Modify an existing file by appending content
# The >> operator appends to the file instead of overwriting
echo world >> file1.txt

# Stage the modified file again
# Since file1.txt was changed after being staged, we need to add it again
# Git tracks the exact state of files when they're staged
git add file1.txt